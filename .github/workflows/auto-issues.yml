name: Auto Issue Creator

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
    types: [opened, synchronize]
  workflow_dispatch:  # Allow manual trigger

jobs:
  create-issues:
    name: Create Issues from Code Comments
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'opened')
    
    permissions:
      issues: write
      contents: read
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get full history for better context

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install PyGithub

    - name: Scan for TODO comments
      id: scan
      run: |
        python .github/scripts/todo_scanner.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_REF: ${{ github.ref }}
        PR_NUMBER: ${{ github.event.number }}

    - name: Comment on PR with found TODOs
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = '.github/pr_todos.json';
          
          if (fs.existsSync(path)) {
            const todos = JSON.parse(fs.readFileSync(path, 'utf8'));
            
            if (todos.length > 0) {
              let comment = `## üìù TODOs Found in This PR\n\n`;
              comment += `Found ${todos.length} TODO comment(s) in this PR:\n\n`;
              
              todos.forEach((todo, index) => {
                comment += `### ${index + 1}. ${todo.type} in \`${todo.file}\`\n`;
                comment += `**Line ${todo.line}:** ${todo.text}\n\n`;
                if (todo.issueUrl) {
                  comment += `‚û°Ô∏è [GitHub Issue Created](${todo.issueUrl})\n\n`;
                }
              });
              
              comment += `\n---\n*This comment was automatically generated by the Auto Issue Creator workflow.*`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
          }
